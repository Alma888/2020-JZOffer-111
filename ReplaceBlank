# 2020-JZOffer-111

面试题4：替换空格
题目：请实现一个函数，把字符串中的每个空格替换成"%20"。例如：输入“We are happy.”，则输出“We%20are%20happy.”。

解题思路：
将原字符串放入数组中 (原数组)，再将原字符串的所含空格数计算出  
             来。对应计算出最终字符串的长度。
设置一个目标数组，长度就是最终字符串的长度。将替换后的最终字符
             串放入其中。
最后输出最终替换后的字符串。
时间复杂度为O(n)

public class ReplaceBlank {
    //方法一
    public String replaceBlank1(String s){
        int len=0; //记录所给字符串中有多少个空格
        char[] target;//目标数组
        char[] original=s.toCharArray();//原数组
        for(int i=0;i<original.length;i++){
            if(original[i]==' '){
                len++;
            }
        }
        int lens=s.length()+len*2;//目标数组的长度
        target=new char[lens];//目标数组初始化
        int j=0;
        for(int i=0;i<original.length;i++){
            if(original[i]==' '){
                target[j]='%';
                target[++j]='2';
                target[++j]='0';
                j++;
            }else {
                target[j] = original[i];
                j++;
            }
        }
        //String类的构造函数 可以直接将Char数组转化为字符串
        String ss=new String(target);
        return ss;
    }
    ————————————————————————————————————————————————————————————————————————————————————————————————————————————

    //方法二
    public String replaceBlank2(String s){
        //利用String类的replace函数 基于正则表达式
        return s.replace(" ","%20");
    }

    public static void main(String[] args) {
        String s="We are happy.";
        System.out.println(new ReplaceBlank().replaceBlank1(s));
        System.out.println(new ReplaceBlank().replaceBlank2(s));
    }
}
