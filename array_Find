# 2020-JZOffer-111

//面试题3 ——二维数组中的查找

解题思路：选择给出的二维数组的右上角或左下角的数进行比较过程。
                  如果选中的数和要查找的值相等，就返回true。
                  如果选中的数比要查找的值大，就排除选中数的所在列，对选中数   
               的左侧所有列的数进行比较查找。
                  如果选中的数比要查找的值小，就排除选中数的所在行，对选中数
               的下侧所有行的数进行比较查找。
                  循环上述操作，直到找到该值为止，若循环完都没找到就返回
               false。

public class array_Find {

    //每次选择右上角的数字进行比较查找过程
    public  boolean Find1(int[][] arr,int value){
        boolean found=false;  //设置标志位

        if(arr!=null){ //先判断数组所给是否为空
            int rows=arr.length; //获取行数
            int row=0;//行下标
            int column=arr[0].length-1;//列下标
            //每次将查找区域的右上角的数与所查找的数字进行比较
            while (row<rows&&column>=0){
                if(arr[row][column]==value){
                    found=true;
                    break;
                }else if(arr[row][column]<value){
                    row++;
                }else {
                    column--;
                }
            }
        }
        return found;
    }
——————————————————————————————————————————————————————————————————————————————
    //每次选择左下角的数字进行比较查找过程
    public boolean Find2(int[][] arr,int value){
        boolean found=false;
        if(arr!=null){
            int rows=arr.length;
            int columns=arr[0].length;
            int row=rows-1;
            int column=0;
            while (row>0&&column<columns){
                if(arr[row][column]==value){
                    found=true;
                    break;
                }else if(arr[row][column]<value){
                    column++;
                }else {
                    row--;
                }
            }
        }
        return found;
    }

    public static void main(String[] args) {
        int[][] arr={
                {1,2,8,9},
                {2,4,9,12},
                {4,7,10,13},
                {6,8,11,15}
        };
        array_Find find1=new array_Find();
        array_Find find2=new array_Find();

        System.out.println(find1.Find1(arr,7));
        System.out.println(find2.Find2(arr,7));
    }
}
